version: "3.8"

services:
  controller:
    build:
      context: .
      dockerfile: Dockerfile
      target: controller
    image: ananta-controller:latest
    ports:
      - "8081:8081"
    depends_on:
      - db
    environment:
      - AI_AGENT_URL=http://ai-agent:5000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ananta
    volumes:
      - ./:/app        # <–– alles aus Deinem Projektordner
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint: sh -c "cd frontend && npm install && npm run build && cd .. && exec python -m controller.controller"


  ai-agent:
    build:
      context: .
      dockerfile: Dockerfile
      target: ai-agent
    image: ananta-agent:latest
    depends_on:
      - controller
      - db
    ports:
      - "5000:5000"
    environment:
      - CONTROLLER_URL=http://controller:8081
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ananta
    volumes:
      - ./:/app        # <–– Host-Code mounten
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint: sh -c "python agent/ai_agent.py"

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ananta
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  playwright:
    image: mcr.microsoft.com/playwright:v1.45.0-jammy
    depends_on:
      - controller
      - ai-agent
      - db
    environment:
      - BACKEND_URL=http://controller:8081
      - AGENT_URL=http://ai-agent:5000
      - PLAYWRIGHT_BASE_URL=http://controller:8081
      - PLAYWRIGHT_SKIP_WEBSERVER=1
    working_dir: /app/frontend
    volumes:
      - ./:/app
    entrypoint: sh -c "npm ci && npx playwright test"

volumes:
  db_data:
