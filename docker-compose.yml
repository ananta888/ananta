version: "3.8"

services:
  controller:
    build:
      context: .
      dockerfile: Dockerfile
      target: controller
    image: ananta-controller:latest
    ports:
      - "8081:8081"
    depends_on:
        db:
          condition: service_healthy
    environment:
      - AI_AGENT_URL=http://ai-agent:5000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ananta
      - RUN_TESTS=false # Setze auf 'true', um Tests auszuführen
      - PLAYWRIGHT_BASE_URL=http://controller:8081
      - PLAYWRIGHT_SKIP_WEBSERVER=1
    volumes:
      - ./:/app        # <–– alles aus Deinem Projektordner
      - /app/frontend/node_modules  # <-- node_modules vom Container-Dateisystem verwenden
      - /app/frontend/dist  # <-- dist vom Container-Dateisystem verwenden
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint: sh -c "mkdir -p /app/frontend/node_modules && mkdir -p /app/frontend/dist && chmod -R 777 /app/frontend/dist && cd frontend && npm install --unsafe-perm --no-bin-links && npm run build && if [ \"$RUN_TESTS\" = \"true\" ]; then npm install -D @playwright/test && npx playwright install --with-deps && NODE_OPTIONS=\"--experimental-vm-modules\" npx playwright test; fi && cd .. && exec python -m controller.controller"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  ai-agent:
    build:
      context: .
      dockerfile: Dockerfile
      target: ai-agent
    image: ananta-agent:latest
    depends_on:
      db:
        condition: service_healthy
      controller:
        condition: service_started
    ports:
      - "5000:5000"
    environment:
      - CONTROLLER_URL=http://controller:8081
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ananta
      - AI_AGENT_LOG_LEVEL=DEBUG
    volumes:
      - ./:/app        # <–– Host-Code mounten
      - ./entrypoint-ai-agent.sh:/entrypoint.sh
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ananta
    ports:
      - "5432:5432"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - db_data:/var/lib/postgresql/data


  playwright:
    build:
      context: .
      dockerfile: Dockerfile
      target: playwright
    image: ananta-playwright:latest
    depends_on:
      controller:
        condition: service_healthy
      ai-agent:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      - BACKEND_URL=http://controller:8081
      - AGENT_URL=http://ai-agent:5000
      - PLAYWRIGHT_BASE_URL=http://controller:8081
      - PLAYWRIGHT_SKIP_WEBSERVER=1
      - CI=1
      - PLAYWRIGHT_TIMEOUT=60000
      - DEBUG=pw:api  # Aktiviere Playwright-Debugging
    volumes:
      - ./:/app
      - /app/frontend/node_modules
      - /app/frontend/dist
    working_dir: /app/frontend
    # Vereinfachter Entrypoint, da wir bereits auf gesunde Services warten
    entrypoint: /app/run-tests.sh
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  db_data:
