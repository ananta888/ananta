services:
  controller:
    build:
      context: .
      dockerfile: Dockerfile
      target: controller_stage
    image: ananta-controller:latest
    environment:
      - LOG_LEVEL=INFO
      - FRONTEND_DIST=/app/frontend/dist
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ananta
      - ENABLE_E2E_TEST_MODELS=true
      - DEFAULT_ENDPOINT_TYPE=lmstudio
      - TASK_CONSUME_DELAY_SECONDS=8
      - PLAYWRIGHT_BROWSER=chromium
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8081:8081"
    volumes:
      - ./controller:/app/controller
      - ./src:/app/src
      - ./frontend:/app/frontend
      - ./.playwright-cache:/app/.playwright-cache
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 15s
      timeout: 30s
      retries: 6
      start_period: 45s


  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=ananta
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro
      - db_data:/var/lib/postgresql/data

  ai-agent:
    build:
      context: .
      dockerfile: Dockerfile
      target: ai_agent_stage
    image: ananta-agent:latest
    depends_on:
      db:
        condition: service_healthy
      controller:
        condition: service_healthy
    environment:
      - CONTROLLER_URL=http://controller:8081
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ananta
      - AGENT_STARTUP_DELAY=12
    ports:
      - "5000:5000"
    volumes:
      - ./agent:/app/agent
      - ./src:/app/src
      - ./tasks_history:/app/tasks_history
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 60s
    command: python -m agent.ai_agent

  e2e-tests:
    image: mcr.microsoft.com/playwright:v1.54.2-jammy
    depends_on:
      controller:
        condition: service_healthy
      ai-agent:
        condition: service_healthy
    working_dir: /app/frontend
    environment:
      - PLAYWRIGHT_BASE_URL=http://controller:8081
      - PLAYWRIGHT_SKIP_WEBSERVER=1
      - CI=true
      - AGENT_URL=http://ai-agent:5000
    volumes:
      - .:/app
    shm_size: "1gb"
    command: >
      bash -lc "npm ci --no-audit --no-fund && npx playwright test --reporter=html"

volumes:
  db_data: